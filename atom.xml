<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Random tech thoughts]]></title>
  <link href="http://fnordian.github.io/atom.xml" rel="self"/>
  <link href="http://fnordian.github.io/"/>
  <updated>2018-02-21T16:20:03+07:00</updated>
  <id>http://fnordian.github.io/</id>
  <author>
    <name><![CDATA[Marcus Hunger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kubernetes Persistent Volumes With CIFS and Loop Devices]]></title>
    <link href="http://fnordian.github.io/blog/2018/02/21/kubernetes-persistent-volumes-with-cifs-and-loop-devices/"/>
    <updated>2018-02-21T11:14:16+07:00</updated>
    <id>http://fnordian.github.io/blog/2018/02/21/kubernetes-persistent-volumes-with-cifs-and-loop-devices</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s an idea for a poor man&rsquo;s NAS for Kubernetes PVs: All you need is a fileserver running samba and some bash scripting.</p>

<p>But let&rsquo;s begin at how Kubernetes handles storage. The key philosophy here is, that storage is something different than
computation, so storage get&rsquo;s it&rsquo;s own abstraction (i.e. Kubernetes resource).
While computation is basically handled by pods, persistent storage is offered by Persistent Volumes (PV),
which can be mounted inside a pod&rsquo;s container as a volume. In order to mount a PV in a pod,
the pod has to reference a Persistent Volume Claim (PVC).</p>

<p>The Persistent Volume Claim defines the requirements for the storage, e.g. capacity, and acts like a bridge between pod and
PV, bringing them together. After a PVC is deployed it is <em>pending</em> and the controller-manager tries to match it to a PV.
When that succeeds, the PVC is <em>bound</em> to the PV and available to be mounted in a pod as a volume.</p>

<script src="http://fnordian.github.io/assets/mermaid.min.js"></script>


<div class="mermaid">
graph LR;
    pvc[Persistent Volume Claim] -- controller manager binds --> pv[Persistent Volume]
    pod[Pod] -- mounts --> pvc  
</div>


<p>PVCs have a lifecycle separate from pods, so a pod can be created, deleted and recreated, while the PVC and with it the
persistent storage (the stored data) stays alive and <em>bound</em>. When the PVC gets deleted, the stored data becomes
unavailble for good and the PV can be <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reclaiming">reclaimed</a>.</p>

<p>pod.yaml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Pod</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">busybox</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">busybox</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">sleep</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="s">&quot;3600&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">imagePullPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">IfNotPresent</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">busybox</span>
</span><span class='line'>    <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-pv</span>
</span><span class='line'>              <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/volume</span>
</span><span class='line'>  <span class="l-Scalar-Plain">restartPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Always</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-pv</span>
</span><span class='line'>    <span class="l-Scalar-Plain">persistentVolumeClaim</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">claimName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-pv-claim</span>
</span></code></pre></td></tr></table></div></figure>


<p>pvc.yaml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">PersistentVolumeClaim</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-pv-claim</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">accessModes</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">ReadWriteOnce</span>
</span><span class='line'>  <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">storage</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because PV is only an abstract concept of storage, there has to be something, that implements how files are persisted.
This is the storage <em>provisioner</em>. It&rsquo;s job is to mount some kind of storage on the so it&rsquo;s available for the pod.
There are <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes">several provisioners</a> shipped within Kubernetes, most of them for proprietary cloud providers or datacenter-scale
storage systems. Luckily there is also <strong>FlexVolume</strong>, which allows you to implement your own provisioner easily.</p>

<p>pv.yaml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">PersistentVolume</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">pv0003</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">capacity</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">storage</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1Gi</span>
</span><span class='line'>  <span class="l-Scalar-Plain">volumeMode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Filesystem</span>
</span><span class='line'>  <span class="l-Scalar-Plain">accessModes</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">ReadWriteOnce</span>
</span><span class='line'>  <span class="l-Scalar-Plain">persistentVolumeReclaimPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Retain</span>
</span><span class='line'>  <span class="l-Scalar-Plain">flexVolume</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span> <span class="s">&quot;fnordian/cv&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>    <span class="l-Scalar-Plain">options</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">source</span><span class="p-Indicator">:</span> <span class="s">&quot;//192.168.121.225/kubvolumes&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mountOptions</span><span class="p-Indicator">:</span> <span class="s">&quot;dir_mode=0700,file_mode=0600&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">cifsuser</span><span class="p-Indicator">:</span> <span class="s">&quot;nobody&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">cifspass</span><span class="p-Indicator">:</span> <span class="s">&quot;nobody&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using FlexVolume</h2>

<p>So FlexVolume does not implement any storage mounting itself, but it gives you the opportunity to do it yourself
in form of a <em>driver</em>.
The <em>driver</em>&rsquo;s API is not too complicated and often implementing 3 actions (init, mount, unmount) is enough.</p>

<p>The details of a driver are explained <a href="https://github.com/kubernetes/community/blob/master/contributors/devel/flexvolume.md">here</a>.
The gist of creating a most basic driver is: It needs to have a name (vendor-drivername) and must reside as an executable
in a certain path on every node. It defaults to:</p>

<p>/usr/libexec/kubernetes/kubelet-plugins/volume/exec/<em>vendor</em>~<em>drivername</em>/<em>drivername</em></p>

<p>The driver is then called with command line arguments, specifying the action and is expected to respond with json written to
stdout. Here is an example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fnordian~cv/cv init
</span><span class='line'>
</span><span class='line'><span class="c"># response: {&quot;status&quot;: &quot;Success&quot;, &quot;capabilities&quot;: {&quot;attach&quot;: false}}</span>
</span><span class='line'>
</span><span class='line'>/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fnordian~cv/cv mount <span class="se">\</span>
</span><span class='line'>    /var/lib/kubelet/pods/ce4b5af0-16de-11e8-bcfd-5254002cac04/volumes/fnordian~cv/pv0003 <span class="se">\</span>
</span><span class='line'>    <span class="o">{</span><span class="s2">&quot;cifspass&quot;</span>:<span class="s2">&quot;nobody&quot;</span>,<span class="s2">&quot;cifsuser&quot;</span>:<span class="s2">&quot;nobody&quot;</span>,<span class="s2">&quot;kubernetes.io/fsType&quot;</span>:<span class="s2">&quot;&quot;</span>,<span class="s2">&quot;kubernetes.io/pod.name&quot;</span>:<span class="s2">&quot;busybox&quot;</span>,<span class="se">\</span>
</span><span class='line'>    <span class="s2">&quot;kubernetes.io/pod.namespace&quot;</span>:<span class="s2">&quot;default&quot;</span>,<span class="s2">&quot;kubernetes.io/pod.uid&quot;</span>:<span class="s2">&quot;ce4b5af0-16de-11e8-bcfd-5254002cac04&quot;</span>,<span class="se">\</span>
</span><span class='line'>    <span class="s2">&quot;kubernetes.io/pvOrVolumeName&quot;</span>:<span class="s2">&quot;pv0003&quot;</span>,<span class="s2">&quot;kubernetes.io/readwrite&quot;</span>:<span class="s2">&quot;rw&quot;</span>,<span class="s2">&quot;kubernetes.io/serviceAccount.name&quot;</span>:<span class="s2">&quot;default&quot;</span>,<span class="se">\</span>
</span><span class='line'>    <span class="s2">&quot;mountOptions&quot;</span>:<span class="s2">&quot;dir_mode=0700,file_mode=0600&quot;</span>,<span class="s2">&quot;source&quot;</span>:<span class="s2">&quot;//192.168.121.159/kubvolumes&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># response: {&#39;status&#39;: &#39;Success&#39;}</span>
</span><span class='line'>
</span><span class='line'>/usr/libexec/kubernetes/kubelet-plugins/volume/exec/fnordian~cv/cv unmount /var/lib/kubelet/pods/a80184b0-16df-11e8-bcfd-5254002cac04/volumes/fnordian~cv/pv0003
</span><span class='line'>
</span><span class='line'><span class="c"># response: {&#39;status&#39;: &#39;Success&#39;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the driver&rsquo;s mount action gets passed a target directory and parameters specifying the volume as JSON.
After it returned with success, it is expected to have mounted a volume to the target directory. Unmounting follows the
same principle but only needs the target directory as the argument.</p>

<h2>Mount storage on CIFS</h2>

<p>Now that we have the kubernetes specifics out of the way, all that&rsquo;s left is setting up a cifs-share and writing the driver.
The idea for the driver is, that the actual volume is a filesystem inside a plain file, which is made available to the nodes via cifs and mounted for
the pod using loop.</p>

<p>I agree, that it is a bit complex, but the advantage of a filesystem inside a loop-device over
e.g. a cifs-share mounted directly to the pod is, that it can
store files for multiple users (with different uids) and also selinux context labels.</p>

<p>You can find the running driver on <a href="https://github.com/fnordian/fs-on-cifs-flexvolume">github</a>.
It expects name, username and password as arguments of a cifs-share, so be sure to have specified them in the PV.
Please note the lack of error- and corner-case-handling.</p>

<p>Setting up the cifs share with samba is also straight forward. I&rsquo;ve included a sample smb.conf in the repository.
Be sure to also set a password using smbpasswd.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Kubernetes Resource Quotas With Python]]></title>
    <link href="http://fnordian.github.io/blog/2018/02/13/setting-kubernetes-resource-quotas-with-python/"/>
    <updated>2018-02-13T10:27:53+07:00</updated>
    <id>http://fnordian.github.io/blog/2018/02/13/setting-kubernetes-resource-quotas-with-python</id>
    <content type="html"><![CDATA[<p>In an RBAC based kubernetes system, users' access to the cluster can be limitted using namespaces, roles and rules.
These limits consists of resource-types and methods/verbs a user can apply on those.
E.g. a user may create, list and delete pods.</p>

<p>While these limits already enable a quite effective isolation in a way,
that one user may not modify the resources of another user (or the system), it is often necessary to constrain usage even more.</p>

<p>So here is another tool to further control cluster usage: <em>resource quotas</em>.
Resource quotas let you limit the following resources on a per user-basis.</p>

<ul>
<li>pods</li>
<li>services</li>
<li>replicationcontrollers</li>
<li>resourcequotas</li>
<li>secrets</li>
<li>configmaps</li>
<li>persistentvolumeclaims</li>
<li>services.nodeports</li>
<li>services.loadbalancers</li>
</ul>


<p>You can find more documentation <a href="https://kubernetes.io/docs/tasks/administer-cluster/quota-api-object/">here</a></p>

<p>Let&rsquo;s see how to create and apply them with python:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">kubernetes</span>
</span><span class='line'><span class="n">v1</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">CoreV1Api</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">resource_quota</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1ResourceQuota</span><span class="p">(</span>
</span><span class='line'>        <span class="n">spec</span><span class="o">=</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1ResourceQuotaSpec</span><span class="p">(</span>
</span><span class='line'>            <span class="n">hard</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;requests.cpu&quot;</span><span class="p">:</span> <span class="s">&quot;1&quot;</span><span class="p">,</span> <span class="s">&quot;requests.memory&quot;</span><span class="p">:</span> <span class="s">&quot;512M&quot;</span><span class="p">,</span> <span class="s">&quot;limits.cpu&quot;</span><span class="p">:</span> <span class="s">&quot;2&quot;</span><span class="p">,</span> <span class="s">&quot;limits.memory&quot;</span><span class="p">:</span> <span class="s">&quot;512M&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&quot;requests.storage&quot;</span><span class="p">:</span> <span class="s">&quot;1Gi&quot;</span><span class="p">,</span> <span class="s">&quot;services.nodeports&quot;</span><span class="p">:</span> <span class="s">&quot;0&quot;</span><span class="p">}))</span>
</span><span class='line'><span class="n">resource_quota</span><span class="o">.</span><span class="n">metadata</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1ObjectMeta</span><span class="p">(</span><span class="n">namespace</span><span class="o">=</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">name</span><span class="o">=</span><span class="s">&quot;user-quota&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">v1</span><span class="o">.</span><span class="n">create_namespaced_resource_quota</span><span class="p">(</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span> <span class="n">resource_quota</span><span class="p">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>As with roles, resource quotas are applied to namespaces. So to set limits for a user,
the quotas have to be configured with the user&rsquo;s namespace.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Limitted Authorization for a Kubernetes User With Python]]></title>
    <link href="http://fnordian.github.io/blog/2018/02/12/limitted-authorization-for-a-kubernetes-user-with-python/"/>
    <updated>2018-02-12T08:09:56+07:00</updated>
    <id>http://fnordian.github.io/blog/2018/02/12/limitted-authorization-for-a-kubernetes-user-with-python</id>
    <content type="html"><![CDATA[<p>While last post&rsquo;s
was about <a href="http://fnordian.github.io/blog/2018/02/11/creating-client-certificates-for-kubernetes-apiserver-with-python/">authenticating a user</a>
to kubernetes, this one handles authorization.</p>

<p>Different levels of authorization in kubernetes can be achieved through <em>namespaces</em>, <em>roles</em> and <em>rolebindings</em>.
In order to limit a user to his/her own space in the cluster, we create a personal namespace and bind a role to it.
The role describes the types of access, the user will have.
This kind of authorization is called RBAC, <a href="https://kubernetes.io/docs/admin/authorization/rbac/">role-based access control</a>.</p>

<p>A namespace in kubernetes is defined just by a name. So creating it is easy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">kubernetes</span> <span class="kn">import</span> <span class="n">client</span>
</span><span class='line'><span class="n">v1</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">CoreV1Api</span><span class="p">()</span>
</span><span class='line'><span class="n">v1</span><span class="o">.</span><span class="n">create_namespace</span><span class="p">(</span><span class="s">&quot;user-namespace&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Roles are a bit more complex. They specify the access rights for the user. These rights are defined as a list of rules,
which are additive and declare the resources and the type of access the role will give.</p>

<p>Besides roles, there are also cluster roles. The difference between those is, that a role is specific to a namespace,
while a cluster role is not.</p>

<p>The example below gives a user enough rights to create, manage and delete deployments. Note that as a role is specific
to a namespace and that a user-namespace is specific to a user, there will be a role for every user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">kubernetes</span>
</span><span class='line'><span class="n">rules</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1PolicyRule</span><span class="p">([</span><span class="s">&quot;&quot;</span><span class="p">],</span> <span class="n">resources</span><span class="o">=</span><span class="p">[</span><span class="s">&quot;pods&quot;</span><span class="p">],</span> <span class="n">verbs</span><span class="o">=</span><span class="p">[</span><span class="s">&quot;get&quot;</span><span class="p">,</span> <span class="s">&quot;list&quot;</span><span class="p">,</span> <span class="s">&quot;create&quot;</span><span class="p">,</span> <span class="s">&quot;delete&quot;</span><span class="p">,</span> <span class="s">&quot;update&quot;</span><span class="p">],</span> <span class="p">),</span>
</span><span class='line'>        <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1PolicyRule</span><span class="p">([</span><span class="s">&quot;extensions&quot;</span><span class="p">],</span> <span class="n">resources</span><span class="o">=</span><span class="p">[</span><span class="s">&quot;deployments&quot;</span><span class="p">,</span> <span class="s">&quot;replicasets&quot;</span><span class="p">],</span>
</span><span class='line'>                                       <span class="n">verbs</span><span class="o">=</span><span class="p">[</span><span class="s">&quot;get&quot;</span><span class="p">,</span> <span class="s">&quot;list&quot;</span><span class="p">,</span> <span class="s">&quot;create&quot;</span><span class="p">,</span> <span class="s">&quot;delete&quot;</span><span class="p">,</span> <span class="s">&quot;update&quot;</span><span class="p">],</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="n">role</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1Role</span><span class="p">(</span><span class="n">rules</span><span class="o">=</span><span class="n">rules</span><span class="p">)</span>
</span><span class='line'><span class="n">role</span><span class="o">.</span><span class="n">metadata</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1ObjectMeta</span><span class="p">(</span><span class="n">namespace</span><span class="o">=</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span>
</span><span class='line'>                                               <span class="n">name</span><span class="o">=</span><span class="s">&quot;user-role&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">rbac</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">RbacAuthorizationV1Api</span><span class="p">()</span>
</span><span class='line'><span class="n">rbac</span><span class="o">.</span><span class="n">create_namespaced_role</span><span class="p">(</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span> <span class="n">role</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The created role must be bound to a user, otherwise it is not effective. Binding happens through role bindings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">kubernetes</span>
</span><span class='line'>
</span><span class='line'><span class="n">role_binding</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1RoleBinding</span><span class="p">(</span>
</span><span class='line'>        <span class="n">metadata</span><span class="o">=</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1ObjectMeta</span><span class="p">(</span><span class="n">namespace</span><span class="o">=</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span>
</span><span class='line'>                                                <span class="n">name</span><span class="o">=</span><span class="s">&quot;user-role-binding&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">subjects</span><span class="o">=</span><span class="p">[</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1Subject</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;user&quot;</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">&quot;User&quot;</span><span class="p">,</span> <span class="n">api_group</span><span class="o">=</span><span class="s">&quot;rbac.authorization.k8s.io&quot;</span><span class="p">)],</span>
</span><span class='line'>        <span class="n">role_ref</span><span class="o">=</span><span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">V1RoleRef</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">&quot;Role&quot;</span><span class="p">,</span> <span class="n">api_group</span><span class="o">=</span><span class="s">&quot;rbac.authorization.k8s.io&quot;</span><span class="p">,</span>
</span><span class='line'>                                             <span class="n">name</span><span class="o">=</span><span class="s">&quot;user-role&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">rbac</span> <span class="o">=</span> <span class="n">kubernetes</span><span class="o">.</span><span class="n">client</span><span class="o">.</span><span class="n">RbacAuthorizationV1Api</span><span class="p">()</span>
</span><span class='line'><span class="n">rbac</span><span class="o">.</span><span class="n">create_namespaced_role_binding</span><span class="p">(</span><span class="n">namespace</span><span class="o">=</span><span class="s">&quot;user-namespace&quot;</span><span class="p">,</span>
</span><span class='line'>                                        <span class="n">body</span><span class="o">=</span><span class="n">role_binding</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it. Now, the user &lsquo;user&rsquo; has access to it&rsquo;s own namespace &lsquo;user-namespace&rsquo; and may manage deployments.</p>

<p>There&rsquo;s one more thing. What if you want to make sure, a user does not deplete all the cluster&rsquo;s resources?
With the current configuration, he or she is able to spawn new pods until all the nodes are full.
It turns out, kubernetes has a way of handling this. It&rsquo;s called resource quota, and my next post will be about it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating Client Certificates for Kubernetes Apiserver With Python]]></title>
    <link href="http://fnordian.github.io/blog/2018/02/11/creating-client-certificates-for-kubernetes-apiserver-with-python/"/>
    <updated>2018-02-11T11:13:29+07:00</updated>
    <id>http://fnordian.github.io/blog/2018/02/11/creating-client-certificates-for-kubernetes-apiserver-with-python</id>
    <content type="html"><![CDATA[<p>Kubernetes features a complex, multi-user permissions system to control access to the cluster.
Those options are bound to contexts and users can be given access to those contexts.
For that, a user must authenticate itself to the api-server and there are various ways for doing that.</p>

<p><a href="https://kubernetes.io/docs/admin/authentication/">The authentication options are documented here</a></p>

<p>One of those options is authentication through x509 client certificates.</p>

<p>A user wanting to authenticate needs to have a certificate with his/her username as the subject&rsquo;s commonName.
And the certificate needs to be signed by the cluster&rsquo;s ca.
Although the concept is quite easy, creating certificates using the openssl-cli often proves to be difficult.
So here is a python script that creates/takes a ca and creates new client certificates for a kubernetes user.</p>

<p>Be sure apiserver runs with <code>--client-ca-file=yourca.crt</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">socket</span> <span class="kn">import</span> <span class="n">gethostname</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">yaml</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">OpenSSL</span> <span class="kn">import</span> <span class="n">crypto</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">base64</span>
</span><span class='line'>
</span><span class='line'><span class="n">CA_CERT_FILE</span> <span class="o">=</span> <span class="s">&quot;ca.crt&quot;</span>
</span><span class='line'><span class="n">CA_KEY_FILE</span> <span class="o">=</span> <span class="s">&quot;ca.key&quot;</span>
</span><span class='line'><span class="n">CLIENT_CERT_FILE</span> <span class="o">=</span> <span class="s">&quot;client.crt&quot;</span>
</span><span class='line'><span class="n">CLIENT_KEY_FILE</span> <span class="o">=</span> <span class="s">&quot;client.key&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">generate_self_signed_ca</span><span class="p">():</span>
</span><span class='line'>    <span class="n">k</span> <span class="o">=</span> <span class="n">crypto</span><span class="o">.</span><span class="n">PKey</span><span class="p">()</span>
</span><span class='line'>    <span class="n">k</span><span class="o">.</span><span class="n">generate_key</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">TYPE_RSA</span><span class="p">,</span> <span class="mi">1024</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># create a self-signed ca</span>
</span><span class='line'>    <span class="n">ca</span> <span class="o">=</span> <span class="n">crypto</span><span class="o">.</span><span class="n">X509</span><span class="p">()</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">C</span> <span class="o">=</span> <span class="s">&quot;DE&quot;</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">ST</span> <span class="o">=</span> <span class="s">&quot;Duesseldorf&quot;</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">L</span> <span class="o">=</span> <span class="s">&quot;Duesseldorf&quot;</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">O</span> <span class="o">=</span> <span class="s">&quot;Dummy GmbH&quot;</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">OU</span> <span class="o">=</span> <span class="s">&quot;Dummy GmbH&quot;</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span><span class="o">.</span><span class="n">CN</span> <span class="o">=</span> <span class="n">gethostname</span><span class="p">()</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">set_serial_number</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">gmtime_adj_notBefore</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">gmtime_adj_notAfter</span><span class="p">(</span><span class="mi">10</span> <span class="o">*</span> <span class="mi">365</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span><span class="p">)</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">set_issuer</span><span class="p">(</span><span class="n">ca</span><span class="o">.</span><span class="n">get_subject</span><span class="p">())</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">set_pubkey</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">add_extensions</span><span class="p">([</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;basicConstraints&quot;</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">b</span><span class="s">&quot;CA:TRUE, pathlen:0&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;keyUsage&quot;</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">b</span><span class="s">&quot;keyCertSign, cRLSign&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;subjectKeyIdentifier&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;hash&quot;</span><span class="p">,</span>
</span><span class='line'>                             <span class="n">subject</span><span class="o">=</span><span class="n">ca</span><span class="p">),</span>
</span><span class='line'>    <span class="p">])</span>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">add_extensions</span><span class="p">([</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;authorityKeyIdentifier&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;keyid:always&quot;</span><span class="p">,</span> <span class="n">issuer</span><span class="o">=</span><span class="n">ca</span><span class="p">)</span>
</span><span class='line'>    <span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ca</span><span class="o">.</span><span class="n">sign</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="s">&#39;sha1&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">CA_CERT_FILE</span><span class="p">,</span> <span class="s">&quot;wb&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">dump_certificate</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">ca</span><span class="p">))</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">CA_KEY_FILE</span><span class="p">,</span> <span class="s">&quot;wb&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">dump_privatekey</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">ca</span><span class="p">,</span> <span class="n">k</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">load_cert</span><span class="p">():</span>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">CA_CERT_FILE</span><span class="p">,</span> <span class="s">&quot;rb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">certfile</span><span class="p">:</span>
</span><span class='line'>        <span class="n">catext</span> <span class="o">=</span> <span class="n">certfile</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">CA_KEY_FILE</span><span class="p">,</span> <span class="s">&quot;rb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">keyfile</span><span class="p">:</span>
</span><span class='line'>        <span class="n">keytext</span> <span class="o">=</span> <span class="n">keyfile</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">load_certificate</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">catext</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">load_privatekey</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">keytext</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">generate_client_cert</span><span class="p">(</span><span class="n">ca_cert</span><span class="p">,</span> <span class="n">ca_key</span><span class="p">,</span> <span class="n">username</span><span class="p">):</span>
</span><span class='line'>    <span class="n">client_key</span> <span class="o">=</span> <span class="n">crypto</span><span class="o">.</span><span class="n">PKey</span><span class="p">()</span>
</span><span class='line'>    <span class="n">client_key</span><span class="o">.</span><span class="n">generate_key</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">TYPE_RSA</span><span class="p">,</span> <span class="mi">2048</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span> <span class="o">=</span> <span class="n">crypto</span><span class="o">.</span><span class="n">X509</span><span class="p">()</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">set_version</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">set_serial_number</span><span class="p">(</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">50000000</span><span class="p">,</span> <span class="mi">100000000</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_subj</span> <span class="o">=</span> <span class="n">client_cert</span><span class="o">.</span><span class="n">get_subject</span><span class="p">()</span>
</span><span class='line'>    <span class="n">client_subj</span><span class="o">.</span><span class="n">commonName</span> <span class="o">=</span> <span class="n">username</span>
</span><span class='line'>    <span class="c"># client_subj.organizationName = &quot;user-group&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">add_extensions</span><span class="p">([</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;basicConstraints&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;CA:FALSE&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;subjectKeyIdentifier&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;hash&quot;</span><span class="p">,</span> <span class="n">subject</span><span class="o">=</span><span class="n">client_cert</span><span class="p">),</span>
</span><span class='line'>    <span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">add_extensions</span><span class="p">([</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;authorityKeyIdentifier&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;keyid:always&quot;</span><span class="p">,</span> <span class="n">issuer</span><span class="o">=</span><span class="n">ca_cert</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;extendedKeyUsage&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;clientAuth&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">X509Extension</span><span class="p">(</span><span class="n">b</span><span class="s">&quot;keyUsage&quot;</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">b</span><span class="s">&quot;digitalSignature&quot;</span><span class="p">),</span>
</span><span class='line'>    <span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">gmtime_adj_notBefore</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">gmtime_adj_notAfter</span><span class="p">(</span><span class="mi">10</span> <span class="o">*</span> <span class="mi">365</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">set_subject</span><span class="p">(</span><span class="n">client_subj</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">set_issuer</span><span class="p">(</span><span class="n">ca_cert</span><span class="o">.</span><span class="n">get_issuer</span><span class="p">())</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">set_pubkey</span><span class="p">(</span><span class="n">client_key</span><span class="p">)</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="o">.</span><span class="n">sign</span><span class="p">(</span><span class="n">ca_key</span><span class="p">,</span> <span class="s">&#39;sha256&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">CLIENT_CERT_FILE</span><span class="p">,</span> <span class="s">&quot;wb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">dump_certificate</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">client_cert</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">CLIENT_KEY_FILE</span><span class="p">,</span> <span class="s">&quot;wb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span><span class='line'>        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">dump_privatekey</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">client_key</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">new_client_cert</span><span class="p">(</span><span class="n">username</span><span class="p">):</span>
</span><span class='line'>    <span class="n">ca_cert</span><span class="p">,</span> <span class="n">ca_key</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">ca_cert</span><span class="p">,</span> <span class="n">ca_key</span> <span class="o">=</span> <span class="n">load_cert</span><span class="p">()</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ca_cert</span><span class="p">,</span> <span class="n">ca_key</span> <span class="o">=</span> <span class="n">generate_self_signed_ca</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span> <span class="o">=</span> <span class="n">generate_client_cert</span><span class="p">(</span><span class="n">ca_cert</span><span class="p">,</span> <span class="n">ca_key</span><span class="p">,</span> <span class="n">username</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span><span class="p">,</span> <span class="n">username</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_user_config</span><span class="p">(</span><span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span><span class="p">,</span> <span class="n">username</span><span class="p">):</span>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&quot;admin.conf&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">adminconfigtext</span><span class="p">:</span>
</span><span class='line'>        <span class="n">config</span> <span class="o">=</span> <span class="n">yaml</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">adminconfigtext</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;users&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;name&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">username</span>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;users&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;user&quot;</span><span class="p">][</span><span class="s">&quot;client-certificate-data&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">dump_certificate</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">client_cert</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;users&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;user&quot;</span><span class="p">][</span><span class="s">&quot;client-key-data&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span>
</span><span class='line'>        <span class="n">crypto</span><span class="o">.</span><span class="n">dump_privatekey</span><span class="p">(</span><span class="n">crypto</span><span class="o">.</span><span class="n">FILETYPE_PEM</span><span class="p">,</span> <span class="n">client_key</span><span class="p">))</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;contexts&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;context&quot;</span><span class="p">][</span><span class="s">&quot;user&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">username</span>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;contexts&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;name&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">username</span> <span class="o">+</span> <span class="s">&quot;@kubernetes&quot;</span>
</span><span class='line'>    <span class="n">config</span><span class="p">[</span><span class="s">&quot;current-context&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">username</span> <span class="o">+</span> <span class="s">&quot;@kubernetes&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">&quot;users&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;user&quot;</span><span class="p">][</span><span class="s">&quot;client-certificate-data&quot;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&quot;user.conf&quot;</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">userconfigtext</span><span class="p">:</span>
</span><span class='line'>        <span class="n">yaml</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">config</span><span class="p">,</span> <span class="n">userconfigtext</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span><span class="p">,</span> <span class="n">username</span> <span class="o">=</span> <span class="n">new_client_cert</span><span class="p">(</span><span class="s">&quot;myusername&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">create_user_config</span><span class="p">(</span><span class="n">client_cert</span><span class="p">,</span> <span class="n">client_key</span><span class="p">,</span> <span class="n">username</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="n">FileNotFoundError</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&quot;admin.conf needed to create user.conf&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you have a <code>admin.conf</code> file, then the script also generates a kubectl configfile for the user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">kubectl</span> <span class="o">--</span><span class="n">kubeconfig</span> <span class="n">user</span><span class="o">.</span><span class="n">conf</span>
</span></code></pre></td></tr></table></div></figure>


<p>Easy peasy. Hope it&rsquo;ll be useful to someone.</p>
]]></content>
  </entry>
  
</feed>
